#!/bin/sh

# Hopefully a helpful way to verify the license for all of the Julia packages
#that are being saved into the AppImage.

if ! which podman > /dev/null 2>&1; then
	echo "podman is not in your path"
	exit 1
fi

CONTAINER_DIR=$(readlink -f "$(dirname "$0")")
CONTAINER_TAG="dbt2-appimage"

# Use the return code from `podman inspect` to determine if the container image
# needs to be created.
if ! podman inspect $CONTAINER_TAG > /dev/null 2>&1; then
	"${CONTAINER_DIR}/appimage-prepare" || exit 1
fi

# Build a list of packages on the container before anything else is installed
# to do the license checking.

FIND1="find . ! -path . -type d -maxdepth 1 -printf '%f '"
SH1="cd /usr/local/AppDir/opt/julia/packages && ${FIND1}"

CMD="podman run --rm $CONTAINER_TAG sh -c \"${SH1}\""
PACKAGES=$(eval "$CMD")

# Now start checking the licenses of each package found.

J0="/usr/local/AppDir/usr/bin/julia -q -O0 --compile=min --startup-file=no"
J1="${J0} -e \"using Pkg; Pkg.add(\\\"PackageAnalyzer\\\")\""
J2="using PackageAnalyzer"
J3="print(\\\"\${PKG}  \\\")"
J4="print(analyze(\\\"\${PKG}\\\").license_files[1].licenses_found)"
J5="print(\\\"\\\n\\\")"

FOR1="for PKG in $PACKAGES; do $J0 -e \"$J2; $J3; $J4; $J5\"; done"

podman run --rm $CONTAINER_TAG sh -c "$J1 && $FOR1"
