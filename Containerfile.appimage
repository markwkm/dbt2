# Build an environment for creating an AppImage.

# Use a distro with an old libc to maximize support on as many linux distros as
# possible.
FROM centos:7

ENV ARCH=x86_64

RUN yum -qy update && \
    yum -qy install bison \
                   bzip2 \
                   cmake \
                   file \
                   flex \
                   gcc \
                   libev-devel \
                   libffi-devel \
                   make \
                   patch \
                   perl \
                   sqlite-devel \
                   xz \
                   zlib-devel && \
    yum -qy clean all

RUN mkdir -p /usr/local/AppDir
ENV LD_LIBRARY_PATH="/usr/local/lib64"

ARG JULIAVER="1.8.5"
ENV JULIA_DEPOT_PATH=/usr/local/AppDir/opt/julia
RUN curl -o /tmp/julia-${JULIAVER}-linux-${ARCH}.tar.gz \
         -sOL https://julialang-s3.julialang.org/bin/linux/x64/1.8/julia-${JULIAVER}-linux-${ARCH}.tar.gz && \
    tar -C /tmp -xf /tmp/julia-${JULIAVER}-linux-${ARCH}.tar.gz && \
    mv /tmp/julia-${JULIAVER} /usr/local/AppDir/usr && \
    sed -i -e 's#/usr#././#g' /usr/local/AppDir/usr/bin/julia && \
    /usr/local/AppDir/usr/bin/julia --quiet -C generic \
            -e 'import Pkg; Pkg.add("CSV"); Pkg.add("DataFrames"); Pkg.add("VegaLite");'

ARG OPENSSLVER="1.1.1s"
RUN curl -o /tmp/openssl-${OPENSSLVER}.tar.gz \
         -sOL https://www.openssl.org/source/openssl-${OPENSSLVER}.tar.gz && \
    tar -C /usr/local/src -xf /tmp/openssl-${OPENSSLVER}.tar.gz
WORKDIR /usr/local/src/openssl-${OPENSSLVER}
RUN ./config -fPIC shared && \
    make -s -j$(nproc) && \
    make -s install

ARG PYTHONVER="3.11.1"
RUN curl -o /tmp/Python-${PYTHONVER}.tgz \
         -sOL https://www.python.org/ftp/python/${PYTHONVER}/Python-${PYTHONVER}.tgz && \
    tar -C /usr/local/src -xf /tmp/Python-${PYTHONVER}.tgz
WORKDIR /usr/local/src/Python-${PYTHONVER}
RUN ./configure --silent --prefix=/usr/local/AppDir/usr \
                --with-openssl-rpath=/usr/local/lib64 && \
    make -s -j$(nproc) && \
    make -s install && \
    sed -i -e 's#/usr#././#g' /usr/local/AppDir/usr/bin/python3.11 && \
    /usr/local/AppDir/usr/bin/pip3 install docutils && \
    sed -i '1s/^.*$/#!\/usr\/bin\/env python3/' /usr/local/AppDir/usr/bin/rst2html5.py

# PostgreSQL 11 is the first release creating the pg_type_d.h include file for
# CockroachDB binary support.

ARG PGVER="11.18"
RUN curl -o /tmp/postgresql-${PGVER}.tar.bz2 \
         -sOL https://ftp.postgresql.org/pub/source/v${PGVER}/postgresql-${PGVER}.tar.bz2 && \
    tar -C /usr/local/src -xf /tmp/postgresql-${PGVER}.tar.bz2
WORKDIR /usr/local/src/postgresql-${PGVER}
# I think it's simplier to install into the system's default paths and into a
# "clean" location for ease of building other software and generating the
# AppImage, resp.
RUN ./configure --silent --without-ldap --without-readline --without-zlib \
    --without-gssapi --with-openssl --prefix=/usr && \
    make -s -j $(nproc) install && \
    ./configure --silent --without-ldap --without-readline --without-zlib \
    --without-gssapi --with-openssl --prefix=/usr/local/AppDir/usr && \
    make -s -j $(nproc) install && \
    sed -i -e 's#/usr#././#g' /usr/local/AppDir/usr/bin/psql && \
    ldconfig

# Install DBT Tools

ARG DBTTOOLSVER="0.3.2"
RUN curl -o /tmp/v${DBTTOOLSVER}.tar.gz \
         -sOL https://github.com/osdldbt/dbttools/archive/refs/tags/v${DBTTOOLSVER}.tar.gz && \
    tar -C /usr/local/src -xf /tmp/v${DBTTOOLSVER}.tar.gz
WORKDIR /usr/local/src/dbttools-${DBTTOOLSVER}
RUN cmake -H. -Bbuilds/release -DCMAKE_INSTALL_PREFIX=/usr && \
    (cd builds/release && make -s install DESTDIR=/usr/local/AppDir) && \
    rm -f /tmp/v${DBTTOOLSVER}.tar.gz

WORKDIR /usr/local
RUN curl -sOL https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-${ARCH}.AppImage && \
    chmod +x appimagetool-${ARCH}.AppImage && \
    ./appimagetool-${ARCH}.AppImage --appimage-extract && \
    chmod 0755 squashfs-root && \
    chmod 0755 squashfs-root/usr && \
    chmod 0755 squashfs-root/usr/bin && \
    chmod 0755 squashfs-root/usr/lib && \
    chmod 0755 squashfs-root/usr/lib/appimagekit && \
    chmod 0755 squashfs-root/usr/share
