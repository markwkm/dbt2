#!/bin/sh
@SHELLOPTIONS@

usage() {
	cat << EOF
Database Test 2 (DBT-2) wrapped up in an AppImage.

Usage:
  $(basename "${ARGV0}") COMMAND [OPTION]

Options:
  The OPTION choices are depdent on the COMMAND specified.  The -h flag will
  display the available options.

Commands:
$(find "${APPDIR}/usr/bin" -maxdepth 1 -type f -name "dbt2-*" -printf "%f\n" | sed -e "s/dbt2-/  /")

@HOMEPAGE@
EOF
}

if [ $# -eq 0 ]; then
	usage
	exit 1
fi

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ] ; do
	case "${1}" in
	(-V | --version)
		echo "dbt2 (Database Test 2) v@PROJECT_VERSION@"
		exit 0
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${ARGV0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${ARGV0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

# We need a writable location before the read-only location in the AppImage.
# ${HOME}/.julia is the default location.
export JULIA_DEPOT_PATH="${HOME}/.julia:${APPDIR}/opt/julia"
export LD_LIBRARY_PATH="${APPDIR}/usr/lib:${LD_LIBRARY_PATH}"
export PATH="${APPDIR}/usr/bin:${PATH}"

if [ "$PGHOST" = "" ]; then
	export PGHOST="/tmp,/var/run/postgresql"
fi

COMMAND="${APPDIR}/usr/bin/dbt2-${1}"

if [ ! -f "$COMMAND" ]; then
	echo "COMMAND '${1}' not found, run '$(basename "${ARGV0}")' without arguments for usage."
	exit 1
fi

shift

$COMMAND "$@"
