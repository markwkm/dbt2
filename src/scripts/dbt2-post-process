#!/bin/sh
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2006      Open Source Development Labs, Inc.
#               2014      2ndQuadrant, Ltd.
#               2006-2022 Mark Wong
#

MIXFILE=$1

if [ $# -ne 1 ]; then
	echo "usage: `basename $0` <mix.log>"
	exit 1
fi

if [ ! "x$VERBOSE" = "x1" ]; then
	VERBOSE=0
fi

R --slave --no-save << __EOF__
mix <- read.csv("$MIXFILE", header=FALSE)

colnames(mix)[1] <- 'ctime'
colnames(mix)[2] <- 'txn'
colnames(mix)[3] <- 'status'
colnames(mix)[4] <- 'response'
colnames(mix)[5] <- 'id'
colnames(mix)[6] <- 'wid'
colnames(mix)[7] <- 'did'

# Get the ctime of the last START marker and the ctime the first TERMINATED
# marker to calculate steady state.
start <- max(mix\$ctime[mix\$txn == "START"])

end <- min(mix\$ctime[mix\$txn == "TERMINATED"])

total_txn <- sum(mix\$ctime >= start & mix\$ctime <= end & mix\$txn != "START" &
                 mix\$txn != "TERMINATED")

duration = end - start
errors <- sum(mix\$status == "E")

cat("                         Response Time (s)\n")
cat(paste(" Transaction      %    Average :    90th %        Total        ",
          "Rollbacks      %\n", sep = ""))
cat(paste("------------  -----  ---------------------  -----------  ",
          "---------------  -----\n", sep = ""))

txn <- c("d", "n", "o", "p", "s")
txn_name <- c("Delivery", "New Order", "Order Status", "Payment",
              "Stock Level")

for (i in 1:5) {
  t_total <- sum(mix\$txn == txn[i] & mix\$ctime >= start & mix\$ctime <= end)
  if (i == 2) {
    total_n <- t_total
  }
  t_rollback <- sum(mix\$txn == txn[i] & mix\$status == "R" &
                    mix\$ctime >= start & mix\$ctime <= end)
  t_mean <- mean(mix\$response[mix\$txn == txn[i] & mix\$ctime >= start &
                 mix\$ctime <= end])
  t_q90 <- quantile(mix\$response[mix\$txn == txn[i] & mix\$ctime >= start &
                    mix\$ctime <= end], .9)
  cat(sprintf("%12s  %5.2f  %9.3f : %9.3f  %11d  %15d  %5.2f\n",
              txn_name[i], t_total / total_txn * 100, t_mean, t_q90,
              t_total, t_rollback, t_rollback / t_total * 100))
}

cat(paste("------------  -----  ---------------------  -----------  ",
          "---------------  -----\n", sep = ""))
cat(sprintf("%0.2f new-order transactions per minute (NOTPM)\n",
            total_n / (duration / 60)))
cat(sprintf("%0.1f minute duration\n", duration / 60))
cat(sprintf("%d total unknown errors\n", errors))

# Calculate the ramp up time.

duration <- start - mix[1,]\$ctime
cat(sprintf("%0.1f seconds(s) ramping up\n", duration))

if ($VERBOSE == 1) {
  wid_min <- min(mix\$wid, na.rm=TRUE)
  wid_max <- max(mix\$wid, na.rm=TRUE)
  wid_mean <- mean(mix\$wid, na.rm=TRUE)
  wid_median <- median(mix\$wid, na.rm=TRUE)
  wid_sd <- sd(mix\$wid, na.rm=TRUE)
  wid_var <- var(mix\$wid, na.rm=TRUE)
  cat(sprintf("warehouse range: min %d max %d\n", wid_min, wid_max))
  cat(sprintf("warehouse stats: median %0.1f mean %0.1f sd %0.1f var %0.1f\n",
              wid_median, wid_mean, wid_sd, wid_var))

  xtabs(~ id + wid + did, data=mix)
}
__EOF__
